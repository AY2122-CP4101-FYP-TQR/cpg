<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="228px" preserveAspectRatio="none" style="width:308px;height:228px;background:#000000;" version="1.1" viewBox="0 0 308 228" width="308px" zoomAndPan="magnify"><defs/><g><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="261" x="5" y="19">Dot Executable: /opt/local/bin/dot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="145" x="5" y="35.2969">File does not exist</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="291" x="5" y="51.5938">Cannot find Graphviz. You should try</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="67.8906"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="79" x="5" y="84.1875">@startuml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="57" x="5" y="100.4844">testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="72" x="5" y="116.7813">@enduml</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="133.0781"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="17" x="10" y="149.375">or</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="165.6719"/><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="227" x="5" y="181.9688">java -jar plantuml.jar -testdot</text><text fill="#33FF02" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="10" y="198.2656"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="57.5" y="214.8447">UMLDoclet 2.0.9, PlantUML 1.2020.08</text><!--MD5=[944df2c71eb944d2af60040ecbfdf900]
@startuml
    namespace de.fraunhofer.aisec.cpg.passes {

        class VariableUsageResolver [[VariableUsageResolver.html]] {
            +cleanup(): void
            +accept(TranslationResult): void
        }

        class TypeResolver [[TypeResolver.html]] {
            +obtainType(Type): Type
            +accept(TranslationResult): void
            +ensureUniqueSubTypes(Set<Type>): Set<Type>
            +ensureUniqueType(Node): void
            +handle(Node): void
            +cleanup(): void
        }

        class EvaluationOrderGraphPass [[EvaluationOrderGraphPass.html]] {
            +cleanup(): void
            +accept(TranslationResult): void
            +pushToEOG(@org.checkerframework.checker.nullness.qual.NonNull T extends Node): void
            +getCurrentEOG(): List<Node>
            +setCurrentEOG(List<Node>): void
            +setCurrentEOG(Node): void
            +setCurrentEOGs(List<T extends Node>): void
            +addToCurrentEOG(List<Node>): void
            +exitLoop(Statement, LoopScope): void
            +connectCurrentToLoopStart(): void
            +addEOGEdge(Node, Node): void
            +addMultipleIncomingEOGEdges(List<Node>, Node): void
        }

        class ControlFlowGraphPass [[ControlFlowGraphPass.html]] {
            +cleanup(): void
            +accept(TranslationResult): void
            +addTodo(int, List<Statement>): void
            +addTodo(int, Statement...): void
        }

        class FilenameMapper [[FilenameMapper.html]] {
            +accept(TranslationResult): void
            +cleanup(): void
        }

        class ImportResolver [[ImportResolver.html]] {
            +getLang(): LanguageFrontend
            +setLang(LanguageFrontend): void
            +cleanup(): void
            +accept(TranslationResult): void
        }

        class CallResolver [[CallResolver.html]] {
            +cleanup(): void
            +accept(TranslationResult): void
        }

        class TypeHierarchyResolver [[TypeHierarchyResolver.html]] {
            +getLang(): LanguageFrontend
            +setLang(LanguageFrontend): void
            +accept(TranslationResult): void
            +cleanup(): void
        }

        abstract class Pass [[Pass.html]] {
            #lang: LanguageFrontend
            +getLang(): LanguageFrontend
            +setLang(LanguageFrontend): void
            {abstract} +cleanup(): void
            +supportsLanguageFrontend(LanguageFrontend): boolean
        }

        Pass <|- - VariableUsageResolver
        Pass <|- - TypeResolver
        Pass <|- - EvaluationOrderGraphPass
        Pass <|- - ControlFlowGraphPass
        Pass <|- - FilenameMapper
        Pass <|- - ImportResolver
        Pass <|- - CallResolver
        Pass <|- - TypeHierarchyResolver
        java.util.function.Consumer <|.. Pass
    }

    namespace java.util.function {
        interface Consumer<T> {
            {abstract} +accept(T): void
            +andThen(Consumer<? super T>): Consumer<T>
        }
    }

    center footer UMLDoclet 2.0.9, PlantUML 1.2020.08
@enduml

PlantUML version 1.2020.08(Sun Apr 26 14:08:22 UTC 2020)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.7+10-LTS
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>