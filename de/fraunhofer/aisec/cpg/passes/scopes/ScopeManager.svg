<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="569px" preserveAspectRatio="none" style="width:486px;height:569px;" version="1.1" viewBox="0 0 486 569" width="486px" zoomAndPan="magnify"><defs><filter height="300%" id="f1kg2n7k3x5out" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[a68f10d4796ddabbe687e6d140b262e9]
class de.fraunhofer.aisec.cpg.passes.scopes.ScopeManager--><a href="ScopeManager.html" target="_top" title="ScopeManager.html" xlink:actuate="onRequest" xlink:href="ScopeManager.html" xlink:show="new" xlink:title="ScopeManager.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1kg2n7k3x5out)" height="532.5156" id="de.fraunhofer.aisec.cpg.passes.scopes.ScopeManager" style="stroke: #A80036; stroke-width: 1.5;" width="468" x="7" y="7"/><ellipse cx="143.75" cy="25.9688" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M146.7188,31.6094 Q146.1406,31.9063 145.5,32.0469 Q144.8594,32.2031 144.1563,32.2031 Q141.6563,32.2031 140.3281,30.5625 Q139.0156,28.9063 139.0156,25.7813 Q139.0156,22.6563 140.3281,21 Q141.6563,19.3438 144.1563,19.3438 Q144.8594,19.3438 145.5,19.5 Q146.1563,19.6563 146.7188,19.9531 L146.7188,22.6719 Q146.0938,22.0938 145.5,21.8281 Q144.9063,21.5469 144.2813,21.5469 Q142.9375,21.5469 142.25,22.625 Q141.5625,23.6875 141.5625,25.7813 Q141.5625,27.875 142.25,28.9531 Q142.9375,30.0156 144.2813,30.0156 Q144.9063,30.0156 145.5,29.75 Q146.0938,29.4688 146.7188,28.8906 L146.7188,31.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="104" x="205.25" y="24.9951">ScopeManager</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="164.25" y="37.5791">de.fraunhofer.aisec.cpg.passes.scopes</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="474" y1="44.9375" y2="44.9375"/><ellipse cx="18" cy="55.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="27" y="59.1479">getLang(): LanguageFrontend</text><ellipse cx="18" cy="68.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="27" y="71.9526">setLang(LanguageFrontend): void</text><ellipse cx="18" cy="81.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="27" y="84.7573">isInBlock(): boolean</text><ellipse cx="18" cy="94.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="128" x="27" y="97.562">isInFunction(): boolean</text><ellipse cx="18" cy="107.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="27" y="110.3667">isInRecord(): boolean</text><ellipse cx="18" cy="119.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="27" y="123.1714">getCurrentBlock(): CompoundStatement</text><ellipse cx="18" cy="132.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="27" y="135.9761">getCurrentFunction(): FunctionDeclaration</text><ellipse cx="18" cy="145.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="27" y="148.7808">getCurrentRecord(): RecordDeclaration</text><ellipse cx="18" cy="158.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="210" x="27" y="161.5854">getGlobals(): List&lt;ValueDeclaration&gt;</text><ellipse cx="18" cy="171.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="27" y="174.3901">getCurrentScope(): Scope</text><ellipse cx="18" cy="183.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="27" y="187.1948">addGlobal(VariableDeclaration): void</text><ellipse cx="18" cy="196.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="27" y="199.9995">enterScopeIfExists(Node): void</text><ellipse cx="18" cy="209.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="27" y="212.8042">leaveScopeIfExists(Node): Scope</text><ellipse cx="18" cy="222.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="27" y="225.6089">enterScope(Node): void</text><ellipse cx="18" cy="235.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="27" y="238.4136">isBreakable(Scope): boolean</text><ellipse cx="18" cy="248.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="27" y="251.2183">isContinuable(Scope): boolean</text><ellipse cx="18" cy="260.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="27" y="264.0229">leaveScope(Node): Scope</text><ellipse cx="18" cy="273.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="27" y="276.8276">getFirstScopeThat(Predicate&lt;Scope&gt;): Scope</text><ellipse cx="18" cy="286.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="27" y="289.6323">getFirstScopeThat(Scope, Predicate&lt;Scope&gt;): Scope</text><ellipse cx="18" cy="299.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="27" y="302.437">getScopesThat(Predicate&lt;Scope&gt;): List&lt;Scope&gt;</text><ellipse cx="18" cy="312.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="442" x="27" y="315.2417">getUniqueScopesThat(Predicate&lt;Scope&gt;, Function&lt;Scope, T&gt;): List&lt;Scope&gt;</text><ellipse cx="18" cy="324.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="27" y="328.0464">addBreakStatement(BreakStatement): void</text><ellipse cx="18" cy="337.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="278" x="27" y="340.8511">addContinueStatement(ContinueStatement): void</text><ellipse cx="18" cy="350.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="27" y="353.6558">addLabelStatement(LabelStatement): void</text><ellipse cx="18" cy="363.25" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="246" x="27" y="366.4604">getLabelStatement(String): LabelStatement</text><ellipse cx="18" cy="376.0547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="27" y="379.2651">addValueDeclaration(VariableDeclaration): void</text><ellipse cx="18" cy="388.8594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="302" x="27" y="392.0698">addValueDeclaration(ParamVariableDeclaration): void</text><ellipse cx="18" cy="401.6641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="27" y="404.8745">addValueDeclaration(FieldDeclaration): void</text><ellipse cx="18" cy="414.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="27" y="417.6792">addValueDeclaration(FunctionDeclaration): void</text><ellipse cx="18" cy="427.2734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="27" y="430.4839">addTypedef(TypedefDeclaration): void</text><ellipse cx="18" cy="440.0781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="27" y="443.2886">getCurrentTypedefs(): List&lt;TypedefDeclaration&gt;</text><ellipse cx="18" cy="452.8828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="27" y="456.0933">getCurrentNamePrefix(): String</text><ellipse cx="18" cy="465.6875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="250" x="27" y="468.8979">getCurrentNamePrefixWithDelimiter(): String</text><ellipse cx="18" cy="478.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="27" y="481.7026">getFullNamePrefix(): String</text><ellipse cx="18" cy="491.2969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="323" x="27" y="494.5073">resolve(DeclaredReferenceExpression): ValueDeclaration</text><ellipse cx="18" cy="504.1016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="27" y="507.312">getScopeOfStatment(Node): Scope</text><ellipse cx="18" cy="516.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="296" x="27" y="520.1167">connectToLocal(DeclaredReferenceExpression): void</text><ellipse cx="18" cy="529.7109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="27" y="532.9214">getDeclarationForName(String): Declaration</text></a><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="186" x="148" y="555.7979">UMLDoclet 2.0.9, PlantUML 1.2020.08</text><!--MD5=[a08b51efdc56dedbe174d02bdae0b48e]
@startuml
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>ScopeManager\n<size:10>de.fraunhofer.aisec.cpg.passes.scopes" as de.fraunhofer.aisec.cpg.passes.scopes.ScopeManager [[ScopeManager.html]] {
        +getLang(): LanguageFrontend
        +setLang(LanguageFrontend): void
        +isInBlock(): boolean
        +isInFunction(): boolean
        +isInRecord(): boolean
        +getCurrentBlock(): CompoundStatement
        +getCurrentFunction(): FunctionDeclaration
        +getCurrentRecord(): RecordDeclaration
        +getGlobals(): List<ValueDeclaration>
        +getCurrentScope(): Scope
        +addGlobal(VariableDeclaration): void
        +enterScopeIfExists(Node): void
        +leaveScopeIfExists(Node): Scope
        +enterScope(Node): void
        +isBreakable(Scope): boolean
        +isContinuable(Scope): boolean
        +leaveScope(Node): Scope
        +getFirstScopeThat(Predicate<Scope>): Scope
        +getFirstScopeThat(Scope, Predicate<Scope>): Scope
        +getScopesThat(Predicate<Scope>): List<Scope>
        +getUniqueScopesThat(Predicate<Scope>, Function<Scope, T>): List<Scope>
        +addBreakStatement(BreakStatement): void
        +addContinueStatement(ContinueStatement): void
        +addLabelStatement(LabelStatement): void
        +getLabelStatement(String): LabelStatement
        +addValueDeclaration(VariableDeclaration): void
        +addValueDeclaration(ParamVariableDeclaration): void
        +addValueDeclaration(FieldDeclaration): void
        +addValueDeclaration(FunctionDeclaration): void
        +addTypedef(TypedefDeclaration): void
        +getCurrentTypedefs(): List<TypedefDeclaration>
        +getCurrentNamePrefix(): String
        +getCurrentNamePrefixWithDelimiter(): String
        +getFullNamePrefix(): String
        +resolve(DeclaredReferenceExpression): ValueDeclaration
        +getScopeOfStatment(Node): Scope
        +connectToLocal(DeclaredReferenceExpression): void
        +getDeclarationForName(String): Declaration
    }

    center footer UMLDoclet 2.0.9, PlantUML 1.2020.08
@enduml

PlantUML version 1.2020.08(Sun Apr 26 14:08:22 UTC 2020)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.7+10-LTS
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>